openapi: "3.0.1"
info:
  version: "1"
  title: "Bookshelf documentation"


servers:
  - url: "https://{api_id}.execute-api.eu-west-3.amazonaws.com/live"
    variables: 
      api_id:
        default: api_id
        description: set api id

paths:
  /books:
    get:
      summary: "Find books by genre and publication date"
      parameters:
        - in: query
          name: genre
          required: true
          schema:
            type: string
        - in: query
          name: publication_date
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BookList"
      x-amazon-apigateway-auth:
        type: AWS_IAM
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 200
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${FindBooksFunction.Arn}/invocations"
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
    post:
      summary: "Create a book"
      requestBody:
        content:
          application/json: 
            schema: 
              $ref: "#/components/schemas/Book"
      responses:
        201:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book"
      x-amazon-apigateway-request-validator: validate_request
      x-amazon-apigateway-auth:
        type: AWS_IAM
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 201
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CreateBookFunction.Arn}/invocations"
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy
  /books/{book_id}:
    delete:
      summary: "Delete a book"
      parameters:
        - in: path
          name: book_id
          required: true
          schema:
            type: string
      responses:
        204:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
      x-amazon-apigateway-auth:
        type: AWS_IAM
      x-amazon-apigateway-integration:
        responses:
          default:
            statusCode: 204
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DeleteBookFunction.Arn}/invocations"
        passthroughBehavior: when_no_match
        httpMethod: POST
        type: aws_proxy

components:
  schemas:
    BookList:
      type: array
      items:
        $ref: '#/components/schemas/Book'
    Book:
      type: object
      properties:
        id:
          type: string
        author:
          type: string
        title:
          type: string
        genre:
          type: string
        publication_date:
          type: string
    Empty:
      type: object

    

x-amazon-apigateway-request-validators: 
  validate_request: 
    validateRequestBody: true
    validateRequestParameters: true